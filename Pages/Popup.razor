@page "/popup.html"
@inherits BasePage

@inject IJSRuntime JSRuntime

<div class="popup-container">
    <button @onclick="GetMembers">Get chat members</button>

    <p />

    @if (Members.Any() && _requested)
    {
        if (Members[0] == "Please select a chat.")
        {
            <div class="status-message warning">@Members[0]</div>
        }
        else
        {
            <div class="status-message success">
                The results have been copied to the clipboard!
            </div>
            <p />
            <table class="members-table">
                <thead>
                    <tr>
                        <th>@Members[0]</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var member in Members.Skip(1))
                    {
                        <tr>
                            <td @onclick="() => ShowMember(member)" style="cursor: pointer;">
                                @member
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        }
    }
</div>

@code {
    private List<string> Members = new();
    private bool _handlerRegistered;
    private bool _requested;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender && !_handlerRegistered)
        {
            var objRef = DotNetObjectReference.Create(this);
            await JSRuntime.InvokeVoidAsync("registerMembersHandler", objRef);
            _handlerRegistered = true;
        }
    }

    private async Task GetMembers()
    {
        _requested = true;
        await JSRuntime.InvokeVoidAsync("checkWhatsAppTabAndSendMessage");
        StateHasChanged();
    }

    [JSInvokable]
    public void OnMembersReceived(string[] members)
    {
        Members = members.ToList();
        StateHasChanged();
    }

    private async void ShowMember(string member)
    {
        await JSRuntime.InvokeVoidAsync("openMemberWindow", member);
    }

}